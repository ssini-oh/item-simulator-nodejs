generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  idx       Int       @id @default(autoincrement()) @map("idx")
  userId    String    @unique @map("userId")
  password  String    @map("password")
  name      String    @map("name")
  createdAt DateTime  @default(now()) @map("createdAt")

  characters Character[] // User와 연결된 Character 리스트

  @@map("User")
}

model Character {
  idx       Int       @id @default(autoincrement()) @map("idx") // Primary Key
  nickname  String    @unique @map("nickname") // 캐릭터 이름

  health    Int       @default(500) @map("health") // 캐릭터 체력 (기본값: 500)
  power     Int       @default(100) @map("power") // 캐릭터 공격력 (기본값: 100)
  money     Int       @default(10000) @map("money") // 캐릭터 소지금 (기본값: 10000)

  userIdx   Int       @map("userIdx") // User와의 관계를 위한 외래 키
  user      User      @relation(fields: [userIdx], references: [idx]) // User와 관계 설정

  inventory Character_Inventory[] // 캐릭터와 연결된 Inventory
  items     Character_Item[] // 캐릭터와 연결된 장착된 Item 리스트

  @@map("Character") // 데이터베이스 테이블 이름을 "Character"로 설정
}

model Item {
  idx       Int       @id @default(autoincrement()) @map("idx") // Primary Key
  name      String    @unique @map("name") // 아이템 이름 (UNIQUE)
  type      String    @map("type") // 아이템 타입 (무기, 방어구 등)
  price     Int       @map("price") // 아이템 가격
  stats     Json      @map("stats") // 아이템 스탯 (JSON 형식)

  inventory Character_Inventory[] // 인벤토리에 있는 아이템
  equipped  Character_Item[]      // 장착된 아이템

  @@map("Item") // 데이터베이스 테이블 이름 설정
}

model Character_Inventory {
  idx          Int       @id @default(autoincrement()) @map("idx") // Primary Key
  characterIdx Int       @map("character_idx") // Character와의 관계를 위한 외래 키
  itemIdx      Int       @map("item_idx") // Item과의 관계를 위한 외래 키

  character   Character @relation(fields: [characterIdx], references: [idx]) // Character 관계
  item        Item      @relation(fields: [itemIdx], references: [idx])      // Item 관계

  @@map("Character_Inventory") // 데이터베이스 테이블 이름 설정
}

model Character_Item {
  idx          Int       @id @default(autoincrement()) @map("idx") // Primary Key
  characterIdx Int       @map("character_idx") // Character와의 관계를 위한 외래 키
  itemIdx      Int       @map("item_idx") // Item과의 관계를 위한 외래 키

  character   Character @relation(fields: [characterIdx], references: [idx]) // Character 관계
  item        Item      @relation(fields: [itemIdx], references: [idx])      // Item 관계

  @@map("Character_Item") // 데이터베이스 테이블 이름 설정
}